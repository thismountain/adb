// add_nbo.cpp

#include <iostream>
#include <fstream>
#include <cstdint>

uint32_t convert_endian(uint32_t value) {
    uint32_t result = (value & 0xFF) << 24;
    result |= ((value >> 8) & 0xFF) << 16;
    result |= ((value >> 16) & 0xFF) << 8;
    result |= (value >> 24);
    return result;
}

int main(int argc, char *argv[]) {
    if (argc != 3) {
        std::cerr << "Usage: add-nbo <file1> <file2>" << std::endl;
        return 1;
    }

    std::ifstream file1(argv[1], std::ios::binary);
    std::ifstream file2(argv[2], std::ios::binary);

    if (!file1.is_open() || !file2.is_open()) {
        std::cerr << "Error: Unable to open file." << std::endl;
        return 1;
    }

    uint32_t num1 = 0, num2 = 0;
    
    file1.read(reinterpret_cast<char*>(&num1), sizeof(num1));
    file2.read(reinterpret_cast<char*>(&num2), sizeof(num2));

    if (!file1 || !file2) {
        std::cerr << "Error: Failed to read file." << std::endl;
        return 1;
    }

    num1 = convert_endian(num1);
    num2 = convert_endian(num2);

    uint32_t sum = num1 + num2;
    std::cout << num1 << "(0x" << std::hex << num1 << std::dec << ") + "
              << num2 << "(0x" << std::hex << num2 << std::dec << ") = "
              << sum << "(0x" << std::hex << sum << std::dec << ")" << std::endl;

    return 0;
}

